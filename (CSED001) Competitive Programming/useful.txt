//
int to string: to_string
long long to string: to_string
float to string: to_string
double to string: to_string

string to int: stoi
string to long long: stoll
string to float: stof
string to double: stod

Ex.
    string s="12KYL";
    size_t idx;
    int n=stoi(s, &idx);
    cout<<n<<"\n"; // 12
    cout<<idx; // 2

// accumulate
int sum(accumulate(v.begin(), v.end(), 0));
int product(accumulate(v.begin(), v.end(), 1, multiplies<int>()));
int _(accumulate(v.begin(), v.end(), 0, minus<int>()));
int _(accumulate(v.begin(), v.end(), 0, [](int x, iny y){
    return x-y;
}));

// 0b(2), 0(8), 0x(16)
// 0-based index vs 1-based index
// ++i vs i++
// start&finish vs begin&end
// lvalue(locator value, left(-hand) value) vs rvalue(right(-hand) value)
// auto vs decltype
// previous>current>next

//
#define INT_MAX 2147483647 // = 2^31-1 > 2*10^9
#define INT_MIN -2147483648
#define LLONG_MAX 9223372036854775807LL // = 2^63-1 > 9*10^18
#define LLONG_MIN -9223372036854775807LL-1LL

// unique
vector<int> v({1, 3, 1, 1, 1, 2, 3, 2, 2, 2});
unique(v.begin(), v.end())
v.erase(unique(v.begin(), v.end()), v.end());

//
vector<int> v(N);
iota(v.begin(), v.end(), val);

vector<int> v(10);
iota(v.begin(), v.end(), 0);